Problem:
https://www.hackerrank.com/challenges/cavity-map/problem

Solution:


#!/bin/python3

import math
import os
import random
import re
import sys
import copy

#
# Complete the 'cavityMap' function below.
#
# The function is expected to return a STRING_ARRAY.
# The function accepts STRING_ARRAY grid as parameter.
#

def cavityMap(grid):
    
    n = len(grid)
    new_grid = copy.deepcopy(grid)
    
    for i in range(1, n - 1):
        locations = []
        for j in range(1, n - 1):
            if grid[i][j] > grid[i][j - 1]:
                if grid[i][j] > grid[i][j + 1]:
                    if grid[i][j] > grid[i - 1][j]:
                        if grid[i][j] > grid[i + 1][j]:
                            locations.append(j)
                            
        new_s = list(grid[i])
        for k in locations:
            new_s[k] = 'X'
            
        new_grid[i] = ''.join(new_s)
        
                            
    return new_grid
            

if __name__ == '__main__':
    fptr = open(os.environ['OUTPUT_PATH'], 'w')

    n = int(input().strip())

    grid = []

    for _ in range(n):
        grid_item = input()
        grid.append(grid_item)

    result = cavityMap(grid)

    fptr.write('\n'.join(result))
    fptr.write('\n')

    fptr.close()
