Problem:
https://www.hackerrank.com/challenges/magic-square-forming/problem

Solution:


#!/bin/python3

import math
import os
import random
import re
import sys

# Complete the formingMagicSquare function below.
def formingMagicSquare(s):
    
    # create all the possible magic squares
    matrices = [0] * 8
    matrices[0] = [[8, 1, 6], [3, 5, 7], [4, 9, 2]]
    matrices[1] = [[6, 1, 8], [7, 5, 3], [2, 9, 4]]
    
    matrices[2] = [[4, 9, 2], [3, 5, 7], [8, 1, 6]]
    matrices[3] = [[2, 9, 4], [7, 5, 3], [6, 1, 8]]
    
    matrices[4] = [[8, 3, 4], [1, 5, 9], [6, 7, 2]]
    matrices[5] = [[4, 3, 8], [9, 5, 1], [2, 7, 6]]

    matrices[6] = [[6, 7, 2], [1, 5, 9], [8, 3, 4]]
    matrices[7] = [[2, 7, 6], [9, 5, 1], [4, 3, 8]]
    
    costs = [0] * 8
    for i in range(len(matrices)):
        m = matrices[i]
        cost = 0
        for row_i in range(len(m)):
            for col_i in range(len(m[row_i])):
                cost += abs(m[row_i][col_i] - s[row_i][col_i])

                    
        costs[i] = cost
        
    return sorted(costs)[0]
            
            
if __name__ == '__main__':
    fptr = open(os.environ['OUTPUT_PATH'], 'w')

    s = []

    for _ in range(3):
        s.append(list(map(int, input().rstrip().split())))

    result = formingMagicSquare(s)

    fptr.write(str(result) + '\n')

    fptr.close()
