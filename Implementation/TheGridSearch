Problem:
https://www.hackerrank.com/challenges/the-grid-search/problem

Solution:


#!/bin/python3

import math
import os
import random
import re
import sys

#
# Complete the 'gridSearch' function below.
#
# The function is expected to return a STRING.
# The function accepts following parameters:
#  1. STRING_ARRAY G
#  2. STRING_ARRAY P
#


def gridSearch(G, P):
    
    match_row = P[0]
    len_m_row = len(match_row)
    no_cols = len(P)
    
    answer = 'NO'
    
    # algorithm inspired by KMP algorithm
    # https://www.geeksforgeeks.org/kmp-algorithm-for-pattern-searching/
    
    for k in range(len(G)):
        i = 0
        j = 0
        while i < len(G[k]):
            if G[k][i] == match_row[j]:
                i += 1
                j += 1
                if len_m_row == j:
                    try:
                                                
                        continue_loop = True
                        for L in range(1, no_cols):
                            if continue_loop:
                                if G[k + L][(i - len_m_row) : i] != P[L]:
                                    continue_loop = False
                                
                        if continue_loop:
                            answer = 'YES'
                            break
                        
                    except:
                        pass
                        
                    j -= 1
            else:
                if j  > 0:
                    j -= 1
                else:
                    i += 1
        
        if answer == 'YES':
            break
                   
    return answer

if __name__ == '__main__':
    fptr = open(os.environ['OUTPUT_PATH'], 'w')

    t = int(input().strip())

    for t_itr in range(t):
        first_multiple_input = input().rstrip().split()

        R = int(first_multiple_input[0])

        C = int(first_multiple_input[1])

        G = []

        for _ in range(R):
            G_item = input()
            G.append(G_item)

        second_multiple_input = input().rstrip().split()

        r = int(second_multiple_input[0])

        c = int(second_multiple_input[1])

        P = []

        for _ in range(r):
            P_item = input()
            P.append(P_item)

        result = gridSearch(G, P)

        fptr.write(result + '\n')

    fptr.close()
